generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String
  price       Float
  imageUrl    String
  images      String[]
  category    String
  weight      Float?
  clarity     String?
  cut         String?
  stock       Int         @default(0)
  orderItems  OrderItem[]
  categories  Category[]
  viewedIn    Analytics[] @relation("ProductViews")
  addedIn     Analytics[] @relation("ProductCartAdds")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("USER")
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id              String      @id @default(cuid())
  userId          String
  user            User        @relation(fields: [userId], references: [id])
  status          String      @default("PENDING")
  total           Float
  items           OrderItem[]
  shippingAddress String?
  paymentMethod   String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model OrderItem {
  id          String  @id @default(cuid())
  orderId     String
  order       Order   @relation(fields: [orderId], references: [id])
  productId   String
  product     Product @relation(fields: [productId], references: [id])
  productName String
  quantity    Int
  price       Float
}

model Carrier {
  id        String         @id @default(cuid())
  name      String
  email     String
  phone     String
  address   String
  zones     DeliveryZone[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model DeliveryZone {
  id            String   @id @default(cuid())
  name          String
  price         Float
  estimatedDays Int
  description   String?
  carrierId     String
  carrier       Carrier  @relation(fields: [carrierId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Analytics {
  id             String        @id @default(cuid())
  description    String?
  viewedProducts Product[]     @relation("ProductViews")
  cartProducts   Product[]     @relation("ProductCartAdds")
  type           AnalyticsType
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

enum AnalyticsType {
  VIEW
  CART_ADD
  PURCHASE
}

enum GemFamily {
  CITRINE
  EMERALD
  RUBY
  KUNZITE
  SAPPHIRE
  OPAL
  GARNET
  OTHER
}

model Content {
  id          String   @id @default(cuid())
  type        String   // 'image' ou 'video'
  url         String   @db.Text
  description String?  @db.Text
  section     String   // 'about' ou 'gallery'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([section])
} 